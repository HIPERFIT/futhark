# This is a simple Azure configuration, which is intended for use
# on applications which do not require cross-platform and
# multiple-GHC-version support. For more information and other
# options, see:
#
# https://docs.haskellstack.org/en/stable/azure_ci/

jobs:
- job: build
  pool:
    vmImage: ubuntu-18.04

  timeoutInMinutes: 120

  steps:

  - script: |
      set -e
      sudo apt update
      sudo apt install opencl-headers nvidia-cuda-dev nvidia-opencl-dev python-numpy hpack
    displayName: Install OS-level dependencies

  - script: |
      set -e
      mkdir -p ~/.ghcup/bin
      curl https://gitlab.haskell.org/haskell/ghcup/raw/master/ghcup > ~/.ghcup/bin/ghcup
      chmod +x ~/.ghcup/bin/ghcup
      ~/.ghcup/bin/ghcup install 8.8.2
      ~/.ghcup/bin/ghcup set 8.8.2
      ~/.ghcup/bin/ghcup install-cabal
    displayName: Install GHC and cabal

  - script: |
      set -e
      export PATH=$HOME/.ghcup/bin:$PATH
      hpack
      cabal update
      cabal install --only-dependencies
    displayName: Build Haskell dependencies

  - script: |
      set -e
      export PATH=$HOME/.ghcup/bin:$PATH
      mkdir -p $HOME/.local/bin
      cabal install --installdir=$HOME/.local/bin --install-method=copy
    displayName: Build and install Futhark compiler


  - script: |
      set -e
      export PATH=$HOME/.ghcup/bin:$PATH
      cabal haddock
    displayName: Build docs

  - script: |
      set -e
      export PATH=$HOME/.ghcup/bin:$PATH
      cabal test
    displayName: Run unit tests

  # - script: |
  #     export PATH=$HOME/.local/bin:$PATH
  #     stack install
  #     futhark test --no-terminal --no-tuning tests examples
  #   displayName: Compile and run tests

  - script: |
      set -e
      export PATH=$HOME/.local/bin:$PATH
      futhark test -C --no-terminal --backend=opencl tests examples --exclude=no_opencl
    displayName: Compile with backend=opencl

  - script: |
      set -e
      export PATH=$HOME/.local/bin:$PATH
      futhark test -C --no-terminal --backend=cuda tests examples --exclude=no_opencl
    displayName: Compile with backend=cuda

  - script: |
      set -e
      export PATH=$HOME/.local/bin:$PATH
      futhark test -c --no-terminal --no-tuning --backend=python tests examples --exclude=no_python
    displayName: Compile and run with backend=python
