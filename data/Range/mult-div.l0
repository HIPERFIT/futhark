// min(x, 42) -- [x, 42]
// max(5, y) -- [5, y]

fun int simple(int input1, int input2) =
    let x = max(2, min(input1, 5)) in
    let xn = ~1 * x in
    let y = max(3, min(input2, 6)) in
    let yn = y * ~1  in

    let mul_t0 = x * 2 in
    let mul_t1 = x * ~2 in
    let mul_t2 = x * y in
    let mul_t3 = xn * yn in
    let mul_t4 = x * yn in
    let mul_t5 = xn * y in

    let div_t0 = x / 2 in
    let div_t1 = x / ~2 in
    let div_t2 = x / y in
    let div_t3 = xn / yn in
    let div_t4 = x / yn in
    let div_t5 = xn / y in

    mul_t0 + mul_t1 + mul_t2 + mul_t3 + mul_t4 + mul_t5 + div_t0 + div_t1 + div_t2 + div_t3 + div_t4 + div_t5

fun int complex(int input1, int input2) =
    // Now x can be both Negative or Positive
    let x = max(~2, min(input1, 5)) in
    let xn = ~1 * x in
    let y = max(~3, min(input2, 6)) in
    let yn = y * ~1  in

    let mul_t0 = x * 2 in
    let mul_t1 = x * ~2 in
    let mul_t2 = x * y in
    let mul_t3 = xn * yn in
    let mul_t4 = x * yn in
    let mul_t5 = xn * y in

    let div_t0 = x / 2 in
    let div_t1 = x / ~2 in
    let div_t2 = x / y in
    let div_t3 = xn / yn in
    let div_t4 = x / yn in
    let div_t5 = xn / y in

    mul_t0 + mul_t1 + mul_t2 + mul_t3 + mul_t4 + mul_t5 + div_t0 + div_t1 + div_t2 + div_t3 + div_t4 + div_t5

fun int main(int input1, int input2) =
    complex(input1, input2)
